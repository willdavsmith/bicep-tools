name: Build Binaries

on:
  push:
    branches:
      - main
      - features/*
      - release/*
    tags:
      - 'v*'
  pull_request:
    branches:
      - main
      - features/*
      - release/*
jobs:
  build-linux-amd64:
    runs-on: ubuntu-latest
    permissions:
      contents: read
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          submodules: true
      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
      - name: Enable Corepack
        run: corepack enable
      - name: Build bicep-types
        working-directory: bicep-types/src/bicep-types
        run: |
          npm ci 
          npm run build
      - name: Install dependencies
        run: yarn install --no-immutable
        env:
          YARN_ENABLE_HARDENED_MODE: 0
      - name: Build all packages
        run: yarn run build:all
      - name: Build binary
        working-directory: packages/manifest-to-bicep-extension
        run: yarn run build:binary:linux-amd64
      - name: Verify binary
        working-directory: packages/manifest-to-bicep-extension
        run: |
          echo "Testing binary execution..."
          ./dist/manifest-to-bicep-extension-linux-amd64 --version
          echo "Binary works correctly!"
      - name: Upload binary
        uses: actions/upload-artifact@v4
        with:
          name: manifest-to-bicep-extension-linux-amd64
          path: packages/manifest-to-bicep-extension/dist/manifest-to-bicep-extension-linux-amd64

  build-linux-musl-amd64:
    runs-on: ubuntu-latest
    container:
      image: node:20-alpine
    permissions:
      contents: read
    steps:
      - name: Install build dependencies
        run: |
          apk add --no-cache git bash curl tar xz make g++ python3
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          submodules: true
      - name: Enable Corepack
        run: corepack enable
      - name: Build bicep-types
        working-directory: bicep-types/src/bicep-types
        run: |
          npm ci 
          npm run build
      - name: Install dependencies
        run: yarn install --no-immutable
        env:
          YARN_ENABLE_HARDENED_MODE: 0
      - name: Build all packages
        run: yarn run build:all
      - name: Build binary
        working-directory: packages/manifest-to-bicep-extension
        run: yarn run build:binary:linux-musl-amd64
      - name: Verify binary
        working-directory: packages/manifest-to-bicep-extension
        run: |
          echo "Testing binary execution..."
          ./dist/manifest-to-bicep-extension-linux-musl-amd64 --version
          echo "Binary works correctly!"
      - name: Upload binary
        uses: actions/upload-artifact@v4
        with:
          name: manifest-to-bicep-extension-linux-musl-amd64
          path: packages/manifest-to-bicep-extension/dist/manifest-to-bicep-extension-linux-musl-amd64

  build-linux-arm64:
    runs-on: ubuntu-latest
    permissions:
      contents: read
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          submodules: true
      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
      - name: Enable Corepack
        run: corepack enable
      - name: Build bicep-types
        working-directory: bicep-types/src/bicep-types
        run: |
          npm ci 
          npm run build
      - name: Install dependencies
        run: yarn install --no-immutable
        env:
          YARN_ENABLE_HARDENED_MODE: 0
      - name: Build all packages
        run: yarn run build:all
      - name: Build binary
        working-directory: packages/manifest-to-bicep-extension
        run: yarn run build:binary:linux-arm64
      - name: Upload binary
        uses: actions/upload-artifact@v4
        with:
          name: manifest-to-bicep-extension-linux-arm64
          path: packages/manifest-to-bicep-extension/dist/manifest-to-bicep-extension-linux-arm64

  build-darwin-amd64:
    runs-on: macos-latest
    permissions:
      contents: read
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          submodules: true
      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
      - name: Enable Corepack
        run: corepack enable
      - name: Build bicep-types
        working-directory: bicep-types/src/bicep-types
        run: |
          npm ci 
          npm run build
      - name: Install dependencies
        run: yarn install --no-immutable
        env:
          YARN_ENABLE_HARDENED_MODE: 0
      - name: Build all packages
        run: yarn run build:all
      - name: Build binary
        working-directory: packages/manifest-to-bicep-extension
        run: yarn run build:binary:darwin-amd64
      - name: Verify binary
        working-directory: packages/manifest-to-bicep-extension
        run: |
          echo "Testing binary execution..."
          ./dist/manifest-to-bicep-extension-darwin-amd64 --version
          echo "Binary works correctly!"
      - name: Upload binary
        uses: actions/upload-artifact@v4
        with:
          name: manifest-to-bicep-extension-darwin-amd64
          path: packages/manifest-to-bicep-extension/dist/manifest-to-bicep-extension-darwin-amd64

  build-darwin-arm64:
    runs-on: macos-latest
    permissions:
      contents: read
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          submodules: true
      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
      - name: Enable Corepack
        run: corepack enable
      - name: Build bicep-types
        working-directory: bicep-types/src/bicep-types
        run: |
          npm ci 
          npm run build
      - name: Install dependencies
        run: yarn install --no-immutable
        env:
          YARN_ENABLE_HARDENED_MODE: 0
      - name: Build all packages
        run: yarn run build:all
      - name: Build binary
        working-directory: packages/manifest-to-bicep-extension
        run: yarn run build:binary:darwin-arm64
      - name: Verify binary
        working-directory: packages/manifest-to-bicep-extension
        run: |
          echo "Testing binary execution..."
          ./dist/manifest-to-bicep-extension-darwin-arm64 --version
          echo "Binary works correctly!"
      - name: Upload binary
        uses: actions/upload-artifact@v4
        with:
          name: manifest-to-bicep-extension-darwin-arm64
          path: packages/manifest-to-bicep-extension/dist/manifest-to-bicep-extension-darwin-arm64

  build-windows-amd64:
    runs-on: windows-latest
    permissions:
      contents: read
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          submodules: true
      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
      - name: Enable Corepack
        run: corepack enable
      - name: Build bicep-types
        working-directory: bicep-types/src/bicep-types
        run: |
          npm ci 
          npm run build
      - name: Install dependencies
        run: yarn install --no-immutable
        env:
          YARN_ENABLE_HARDENED_MODE: 0
      - name: Build all packages
        run: yarn run build:all
      - name: Build binary
        working-directory: packages/manifest-to-bicep-extension
        run: yarn run build:binary:win-amd64
      - name: Verify binary
        working-directory: packages/manifest-to-bicep-extension
        run: |
          echo "Testing binary execution..."
          ./dist/manifest-to-bicep-extension-win-amd64.exe --version
          echo "Binary works correctly!"
      - name: Upload binary
        uses: actions/upload-artifact@v4
        with:
          name: manifest-to-bicep-extension-win-amd64
          path: packages/manifest-to-bicep-extension/dist/manifest-to-bicep-extension-win-amd64.exe

  release:
    needs: [build-linux-amd64, build-linux-musl-amd64, build-linux-arm64, build-darwin-amd64, build-darwin-arm64, build-windows-amd64]
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/v')
    permissions:
      contents: write
    steps:
      - name: Download all binaries
        uses: actions/download-artifact@v4
        with:
          path: binaries
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Extract version from tag
        run: echo "VERSION=${GITHUB_REF#refs/tags/v}" >> "$GITHUB_ENV"
      - name: Create Release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          # Create release notes file
          cat > release-notes.md << 'EOF'
          Release ${{ github.ref_name }}
          
          ## Installation
          
          Download the appropriate binary for your platform:
          
          - **Linux (amd64)**: `manifest-to-bicep-extension-linux-amd64`
          - **Linux (musl, amd64)**: `manifest-to-bicep-extension-linux-musl-amd64`
          - **Linux (arm64)**: `manifest-to-bicep-extension-linux-arm64`
          - **macOS (amd64)**: `manifest-to-bicep-extension-darwin-amd64`
          - **macOS (arm64)**: `manifest-to-bicep-extension-darwin-arm64`
          - **Windows (amd64)**: `manifest-to-bicep-extension-win-amd64.exe`
          
          Make the binary executable (Linux/macOS):
          ```bash
          chmod +x manifest-to-bicep-extension-*
          ```
          
          ## Usage
          
          ```bash
          ./manifest-to-bicep-extension-* --help
          ```
          EOF
          
          # Create the release and upload files
          gh release create "${{ github.ref_name }}" \
            --title "Release ${{ github.ref_name }}" \
            --notes-file release-notes.md \
            binaries/*-binary/*
